<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd"
       default-lazy-init="true">

    <description>数据源配置</description>

    <!-- local 环境 -->
    <beans profile="local">

        <bean id="propertyConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:properties/application.local.properties</value>
                </list>
            </property>
        </bean>

        <!-- 数据源配置, 使用 Druid 连接池 -->
        <bean id="emove" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
            <!-- 基本属性 url、user、password -->
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
            <property name="driverClassName" value="${jdbc.driver}"/>

            <!-- 配置初始化大小、最小、最大 -->
            <property name="initialSize" value="10"/>
            <property name="minIdle" value="10"/>
            <property name="maxActive" value="100"/>

            <!-- 配置获取连接等待超时的时间 -->
            <property name="maxWait" value="60000"/>

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="60000"/>

            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="300000"/>

            <property name="validationQuery" value="SELECT 'x'"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>

            <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
            <property name="poolPreparedStatements" value="false"/>
            <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

            <!-- 配置监控统计拦截的filters -->
            <!-- <property name="filters" value="stat,log4j" />  -->
        </bean>

        <bean id="dataSource" class="com.rhjf.salesman.service.datasource.DynamicallyDataSource">
            <property name="targetDataSources">
                <map key-type="java.lang.String">
                    <entry key="emove" value-ref="emove"/>
                </map>
            </property>
            <property name="defaultTargetDataSource" ref="emove"/>
        </bean>
    </beans>




    <!-- test 环境 -->
    <beans profile="test">

        <bean id="propertyConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:properties/application.test.properties</value>
                </list>
            </property>
        </bean>
        
        <!-- 数据源配置, 使用 Druid 连接池 -->
        <bean id="emove" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
            <!-- 基本属性 url、user、password -->
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="root"/>
            <property name="password" value="${jdbc.password}"/>
            <property name="driverClassName" value="${jdbc.driver}"/>

            <!-- 配置初始化大小、最小、最大 -->
            <property name="initialSize" value="10"/>
            <property name="minIdle" value="10"/>
            <property name="maxActive" value="100"/>

            <!-- 配置获取连接等待超时的时间 -->
            <property name="maxWait" value="60000"/>

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="60000"/>

            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="300000"/>

            <property name="validationQuery" value="SELECT 'x'"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>

            <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
            <property name="poolPreparedStatements" value="false"/>
            <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

            <!-- 配置监控统计拦截的filters -->
            <!-- <property name="filters" value="stat,log4j" />  -->
        </bean>
        
        <bean id="dataSource" class="com.rhjf.salesman.service.datasource.DynamicallyDataSource">
            <property name="targetDataSources">
                <map key-type="java.lang.String">
                    <entry key="emove" value-ref="emove"/>
                </map>
            </property>
            <property name="defaultTargetDataSource" ref="emove"/>
        </bean>
    </beans>

    <!-- product 环境 -->
    <beans profile="product">


        <bean id="propertyConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:properties/application.product.properties</value>
                </list>
            </property>
        </bean>


        <!-- 数据源配置, 使用 Druid 连接池 -->
        <bean id="emove" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
            <!-- 基本属性 url、user、password -->
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
            <property name="driverClassName" value="${jdbc.driver}"/>

            <!-- 配置初始化大小、最小、最大 -->
            <property name="initialSize" value="10"/>
            <property name="minIdle" value="10"/>
            <property name="maxActive" value="100"/>

            <!-- 配置获取连接等待超时的时间 -->
            <property name="maxWait" value="60000"/>

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="60000"/>

            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="300000"/>

            <property name="validationQuery" value="SELECT 'x'"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>

            <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
            <property name="poolPreparedStatements" value="false"/>
            <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

            <!-- 配置监控统计拦截的filters -->
            <!-- <property name="filters" value="stat,log4j" />  -->
        </bean>

        <bean id="dataSource" class="com.rhjf.salesman.service.datasource.DynamicallyDataSource">
            <property name="targetDataSources">
                <map key-type="java.lang.String">
                    <entry key="emove" value-ref="emove"/>
                </map>
            </property>
            <property name="defaultTargetDataSource" ref="emove"/>
        </bean>
    </beans>


    <beans profile="oem">
        <bean id="propertyConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:properties/application.oem.properties</value>
                </list>
            </property>
        </bean>

        <!-- 数据源配置, 使用 Druid 连接池 -->
        <bean id="emove" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
            <!-- 基本属性 url、user、password -->
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
            <property name="driverClassName" value="${jdbc.driver}"/>

            <!-- 配置初始化大小、最小、最大 -->
            <property name="initialSize" value="10"/>
            <property name="minIdle" value="10"/>
            <property name="maxActive" value="100"/>

            <!-- 配置获取连接等待超时的时间 -->
            <property name="maxWait" value="60000"/>

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="60000"/>

            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="300000"/>

            <property name="validationQuery" value="SELECT 'x'"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>

            <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
            <property name="poolPreparedStatements" value="false"/>
            <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

            <!-- 配置监控统计拦截的filters -->
            <!-- <property name="filters" value="stat,log4j" />  -->
        </bean>

        <bean id="dataSource" class="com.rhjf.salesman.service.datasource.DynamicallyDataSource">
            <property name="targetDataSources">
                <map key-type="java.lang.String">
                    <entry key="emove" value-ref="emove"/>
                </map>
            </property>
            <property name="defaultTargetDataSource" ref="emove"/>
        </bean>
    </beans>




    <beans profile="duomi">
        <bean id="propertyConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:properties/application.duomi.properties</value>
                </list>
            </property>
        </bean>

        <!-- 数据源配置, 使用 Druid 连接池 -->
        <bean id="emove" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
            <!-- 基本属性 url、user、password -->
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
            <property name="driverClassName" value="${jdbc.driver}"/>

            <!-- 配置初始化大小、最小、最大 -->
            <property name="initialSize" value="10"/>
            <property name="minIdle" value="10"/>
            <property name="maxActive" value="100"/>

            <!-- 配置获取连接等待超时的时间 -->
            <property name="maxWait" value="60000"/>

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="60000"/>

            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="300000"/>

            <property name="validationQuery" value="SELECT 'x'"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>

            <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
            <property name="poolPreparedStatements" value="false"/>
            <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

            <!-- 配置监控统计拦截的filters -->
            <!-- <property name="filters" value="stat,log4j" />  -->
        </bean>

        <bean id="dataSource" class="com.rhjf.salesman.service.datasource.DynamicallyDataSource">
            <property name="targetDataSources">
                <map key-type="java.lang.String">
                    <entry key="emove" value-ref="emove"/>
                </map>
            </property>
            <property name="defaultTargetDataSource" ref="emove"/>
        </bean>
    </beans>





    <beans>

        <!-- 配置事务切面 -->
        <!-- <aop:config>
            <aop:pointcut id="serviceOperation"
                          expression="execution(* com.rhjf.account.core.service..*.*(..))"/>
            <aop:advisor pointcut-ref="serviceOperation" advice-ref="dataSourceAdvice"/>
        </aop:config> -->
        <!--  事务管理器配置, Jpa单数据源事务 -->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource"></property>
        </bean>
        <!--1:配置一个JdbcTemplate实例，并将这个“共享的”，“安全的”实例注入到不同的DAO类中去-->
        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <property name="dataSource" ref="dataSource"/>
        </bean>
        <tx:annotation-driven transaction-manager="transactionManager" order="2"/>
    </beans>

</beans>